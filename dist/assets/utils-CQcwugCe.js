var d=(s,e,t)=>{if(!e.has(s))throw TypeError("Cannot "+t)};var c=(s,e,t)=>(d(s,e,"read from private field"),t?t.call(s):e.get(s)),h=(s,e,t)=>{if(e.has(s))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(s):e.set(s,t)},w=(s,e,t,n)=>(d(s,e,"write to private field"),n?n.call(s,t):e.set(s,t),t);var r=(s,e,t)=>(d(s,e,"access private method"),t);var i,a,o;class u{constructor(){h(this,a);h(this,i,e=>{});this.pc=new RTCPeerConnection;const e="wss://192.168.0.8:3001";this.ws=new WebSocket(e),this.track=null,this.ws.addEventListener("message",t=>{const n=JSON.parse(t.data);switch(console.log(n.type),n.type){case"offer":this.pc.setRemoteDescription(n),this.pc.createAnswer().then(l=>{this.pc.setLocalDescription(l),r(this,a,o).call(this,JSON.stringify(l))});break;case"answer":this.pc.setRemoteDescription(n),c(this,i).call(this,"接続済み");break;case"candidate":this.pc.addIceCandidate(n.ice);break;case"ready":this.restart(this.track);break;case"requestConstraints":r(this,a,o).call(this,JSON.stringify({type:"returnConstraints",constraints:{width:{max:window.screen.width*window.devicePixelRatio},height:{max:window.screen.height*window.devicePixelRatio},aspectRatio:window.screen.height/window.screen.width}}));break;case"returnConstraints":this.track.applyConstraints(n.constraints);break}}),this.pc.addEventListener("iceconnectionstatechange",()=>{switch(this.pc.iceConnectionState){case"checking":c(this,i).call(this,"確認中...");break;case"connected":c(this,i).call(this,"接続済み");break;case"closed":c(this,i).call(this,"切断しました");break;case"failed":c(this,i).call(this,"切断されました");break;case"disconnected":c(this,i).call(this,"一時的に切断しています");break;default:c(this,i).call(this,this.pc.iceConnectionState);break}}),window.addEventListener("beforeunload",()=>{this.pc.close()})}set onEvent(e){w(this,i,e)}async start(e){c(this,i).call(this,"準備中..."),e&&(this.pc.addTrack(e),this.track=e,r(this,a,o).call(this,JSON.stringify({type:"requestConstraints"}))),c(this,i).call(this,"接続中..."),this.pc.addEventListener("icecandidate",t=>{t.candidate&&r(this,a,o).call(this,JSON.stringify({type:"candidate",ice:t.candidate}))}),this.pc.createOffer().then(t=>{this.pc.setLocalDescription(t),r(this,a,o).call(this,JSON.stringify(t))})}restart(e){c(this,i).call(this,"接続しなおしています..."),this.pc.close(),this.pc=new RTCPeerConnection,this.start(e)}ready(e){r(this,a,o).call(this,JSON.stringify({type:"ready"}))}}i=new WeakMap,a=new WeakSet,o=function(e){this.ws.readyState?this.ws.send(e):this.ws.addEventListener("open",()=>{this.ws.send(e)},{once:!0})};const f=s=>{const e=document.documentElement;s.addEventListener("click",()=>{document.fullscreenElement?document.exitFullscreen():e.requestFullscreen().catch(n=>{alert("ご利用のブラウザは全画面表示に対応していません"+n.name),s.disabled=!0})});const t=()=>{s.textContent=document.fullscreenElement?"fullscreen_exit":"fullscreen"};document.addEventListener("fullscreenchange",t)},g=()=>{const s=document.body;let e=0;const t=()=>{clearTimeout(e),s.classList.remove("hide"),e=setTimeout(function(){s.classList.add("hide")},3e3)};return window.addEventListener("pointerdown",t),window.addEventListener("pointermove",t),t(),t};export{u as R,f,g as u};
